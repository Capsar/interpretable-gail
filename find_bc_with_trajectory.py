from numpy import array, float32
import numpy as np
from rl_helper import DecisionTree, DQN
from dtreeviz.trees import *
import gym

# env, discretize, discount, feature_names, class_names = gym.make("Acrobot-v1"), [10, 10, 10, 10, 2, 2], 0.95, ['cos(theta1)', 'sin(theta1)', 'cos(theta2)', 'sin(theta2)', 'thetaDOT1', 'thetaDOT2'], ['torque +1', 'torque 0', 'torque -1']
env, discretize, discount, feature_names, class_names = gym.make("CartPole-v1"), [10, 10, 10, 10], 0.95, ['Cart Position', 'Cart Velocity', 'Pole Angle', 'Pole Angular Velocity'], ['Left', 'Right']
# env, discretize, discount, feature_names, class_names = gym.make("MountainCar-v0"), [30, 300], 0.95, ['Cart Postion', 'Cart Velocity'], ['Left++', 'Do nothing', 'Right++']

expert = DQN(env, 10000, 32)
expert.load()


total_test_rollouts = 100

test_e_mean, test_e_std, test_e_trajectories = expert.do_rollout(n=total_test_rollouts, print=True)
test_e_states = np.array([s for s,_ in test_e_trajectories])
test_e_actions = np.array([a for _,a in test_e_trajectories])

# train_e_mean, train_e_std, train_e_trajectories = -78.0, 0,  [(array([ 0.99962527, -0.02737357,  0.9941026 ,  0.10844378, -0.14700823, 0.19632986], dtype=float32), 2), (array([ 0.9980025 , -0.06317391,  0.98623765,  0.1653341 , -0.20220317,        0.36237636], dtype=float32), 2), (array([ 0.9945978 , -0.10380393,  0.9699    ,  0.24350345, -0.19482325,        0.41649273], dtype=float32), 2), (array([ 0.9906432 , -0.13647707,  0.947795  ,  0.31888035, -0.12548798,    0.35141084], dtype=float32), 2), (array([ 0.9885731 , -0.15074255,  0.9285336 ,  0.37124833, -0.01445001,        0.19587404], dtype=float32), 2), (array([ 0.9932387 , -0.11609016,  0.9449237 ,  0.32729068,  0.35594928,       -0.65305626], dtype=float32), 0), (array([ 0.99987835, -0.0155997 ,  0.9914731 ,  0.13031147,  0.62602806,       -1.3268436 ], dtype=float32), 0), (array([ 0.99276704,  0.12005659,  0.98546124, -0.16990025,  0.6946047 ,       -1.6100972 ], dtype=float32), 0), (array([ 0.9758535 ,  0.21842618,  0.9156161 , -0.40205362,  0.2795818 ,       -0.77100754], dtype=float32), 2), (array([ 0.9743542 ,  0.22501966,  0.8924461 , -0.45115408, -0.21284354,        0.23413661], dtype=float32), 2), (array([ 0.9904124 ,  0.13814215,  0.9478455 , -0.3187301 , -0.65123504,        1.1714684 ], dtype=float32), 2), (array([ 0.9997771 , -0.0211133 ,  0.9997792 , -0.02101296, -0.90405643,        1.7851621 ], dtype=float32), 2), (array([ 0.9795457 , -0.20122181,  0.93914396,  0.3435239 , -0.8598229 ,        1.8332782 ], dtype=float32), 2), (array([ 0.94069403, -0.33925617,  0.7799168 ,  0.6258832 , -0.5407171 ,        1.357583  ], dtype=float32), 2), (array([ 0.9263244 , -0.37672678,  0.6861793 ,  0.7274324 ,  0.14287317,        0.01561841], dtype=float32), 0), (array([ 0.95783275, -0.28732628,  0.77539605,  0.6314752 ,  0.7889933 ,       -1.309776  ], dtype=float32), 0), (array([ 0.99664307, -0.08186904,  0.95354396,  0.3012539 ,  1.2609075 ,       -2.3898325 ], dtype=float32), 0), (array([ 0.98264456,  0.1854985 ,  0.9751539 , -0.2215285 ,  1.3459107 ,       -2.750734  ], dtype=float32), 0), (array([ 0.91139656,  0.41152918,  0.7441216 , -0.6680442 ,  0.9687528 ,       -2.217866  ], dtype=float32), 0), (array([ 0.85991323,  0.5104403 ,  0.52030915, -0.853978  ,  0.13689946,       -0.6881507 ], dtype=float32), 2), (array([ 0.88718826,  0.46140766,  0.5352001 , -0.8447253 , -0.6867466 ,        0.8598349 ], dtype=float32), 2), (array([ 0.9640472 ,  0.265731  ,  0.77518606, -0.631733  , -1.3875687 ,        2.3309145 ], dtype=float32), 2), (array([ 0.998504  , -0.05467856,  0.99454045, -0.10435161, -1.7693031 ,        3.3150911 ], dtype=float32), 2), (array([ 0.92259693, -0.38576528,  0.84825265,  0.5295918 , -1.5431403 ,        3.1144319 ], dtype=float32), 2), (array([ 0.80166066, -0.59777933,  0.46681836,  0.8843532 , -0.8598654 ,        2.0895555 ], dtype=float32), 2), (array([ 0.7572995 , -0.6530677 ,  0.23814678,  0.9712292 ,  0.14817289,        0.36973682], dtype=float32), 0), (array([ 0.8331593 , -0.55303305,  0.33047545,  0.9438146 ,  1.0887631 ,       -1.3346857 ], dtype=float32), 0), (array([ 0.95910347, -0.28305575,  0.69899994,  0.7151217 ,  1.8629863 ,       -3.011722  ], dtype=float32), 0), (array([ 0.99109566,  0.13315174,  0.9978255 ,  0.06591137,  2.236559  ,       -4.095499  ], dtype=float32), 0), (array([ 0.8520968 ,  0.5233842 ,  0.74793285, -0.66377443,  1.8155042 ,       -3.5865607 ], dtype=float32), 0), (array([ 0.6911311 ,  0.72272944,  0.3046383 , -0.9524681 ,  0.732569  ,       -1.7602143 ], dtype=float32), 2), (array([ 0.6658539 ,  0.7460821 ,  0.13484104, -0.99086726, -0.38251287,        0.00920374], dtype=float32), 2), (array([ 0.7897672 ,  0.61340666,  0.30961373, -0.9508624 , -1.4131895 ,        1.796853  ], dtype=float32), 2), (array([ 0.95844024,  0.28529334,  0.75554645, -0.6550951 , -2.2504604 ,        3.5859554 ], dtype=float32), 2), (array([ 0.97900677, -0.20382765,  0.9925111 ,  0.12215476, -2.5559185 ,        4.501279  ], dtype=float32), 2), (array([ 0.78526354, -0.6191617 ,  0.58057207,  0.81420887, -1.9548724 ,        3.5774112 ], dtype=float32), 2), (array([ 0.57111907, -0.82086724,  0.046963  ,  0.99889666, -0.97040397,        2.1461513 ], dtype=float32), 2), (array([ 0.5111016 , -0.8595203 , -0.19626586,  0.9805507 ,  0.2512235 ,        0.31741968], dtype=float32), 0), (array([ 0.6467096 , -0.7627363 , -0.07917421,  0.9968608 ,  1.3953867 ,       -1.518192  ], dtype=float32), 0), (array([ 0.88337475, -0.46866727,  0.40914917,  0.91246754,  2.3678722 ,       -3.513821  ], dtype=float32), 0), (array([ 0.9982635 ,  0.05890708,  0.9672636 ,  0.25377387,  2.9915552 ,       -5.2176223 ], dtype=float32), 0), (array([ 0.8066078 ,  0.59108704,  0.7151971 , -0.6989228 ,  2.5625396 ,       -4.7078266 ], dtype=float32), 0), (array([ 0.5050226 ,  0.86310613,  0.01645541, -0.9998646 ,  1.4890091 ,       -3.0863984 ], dtype=float32), 0), (array([ 0.3418805 ,  0.93974346, -0.43682995, -0.8995441 ,  0.31024846,       -1.6275202 ], dtype=float32), 0), (array([ 0.40585056,  0.9139395 , -0.561178  , -0.82769513, -0.9820876 ,        0.19143465], dtype=float32), 2), (array([ 0.667002 ,  0.7450559, -0.3600326, -0.9329397, -2.0992062,        2.1136777], dtype=float32), 2), (array([ 0.94487333,  0.32743615,  0.26204538, -0.9650555 , -2.9229715 ,        4.253274  ], dtype=float32), 2), (array([ 0.9535502 , -0.30123404,  0.96860904, -0.24858919, -3.3507156 ,        6.042385  ], dtype=float32), 2), (array([ 0.60873944, -0.79337025,  0.61567456,  0.7880005 , -2.5620787 ,        5.142231  ], dtype=float32), 2), (array([ 0.27082205, -0.96262944, -0.18587132,  0.9825741 , -1.2224034 ,        3.400338  ], dtype=float32), 2), (array([ 0.1651915 , -0.9862615 , -0.65762436,  0.753346  ,  0.1327941 ,        1.9310707 ], dtype=float32), 2), (array([ 0.32747447, -0.94486004, -0.7949027 ,  0.60673696,  1.5139982 ,        0.0733612 ], dtype=float32), 0), (array([ 0.6848978, -0.7286392, -0.6750117,  0.737807 ,  2.6297553,       -1.8705422], dtype=float32), 0), (array([ 0.9756915 , -0.21914865, -0.16243693,  0.98671895,  3.2329655 ,       -3.9208999 ], dtype=float32), 0), (array([ 0.9014743 ,  0.43283266,  0.7326299 ,  0.6806272 ,  3.3906784 ,       -5.830693  ], dtype=float32), 0), (array([ 0.47022155,  0.8825484 ,  0.893619  , -0.4488263 ,  2.7485557 ,       -5.851786  ], dtype=float32), 0), (array([ 0.08544264,  0.9963431 ,  0.09839892, -0.99514705,  1.2403555 ,       -4.1812873 ], dtype=float32), 0), (array([ 0.01161355,  0.9999326 , -0.51307726, -0.85834247, -0.47845465,       -2.2302568 ], dtype=float32), 2), (array([ 0.26200205,  0.9650673 , -0.7106691 , -0.70352644, -2.0161035 ,       -0.25627995], dtype=float32), 2), (array([ 0.7136587 ,  0.7004936 , -0.58674145, -0.80977434, -3.1934252 ,        1.9232007 ], dtype=float32), 2), (array([ 0.9972165 ,  0.0745599 , -0.01340718, -0.9999101 , -3.7091417 ,        4.207512  ], dtype=float32), 2), (array([ 0.78229994, -0.6229019 ,  0.857559  , -0.51438564, -3.6744585 ,        6.0286527 ], dtype=float32), 2), (array([ 0.23854236, -0.9711321 ,  0.79361033,  0.60842633, -2.7295282 ,        5.5041256 ], dtype=float32), 2), (array([-0.15555122, -0.98782784, -0.02545809,  0.99967587, -1.2224607 ,        3.9526923 ], dtype=float32), 2), (array([-0.24481018, -0.96957105, -0.63290864,  0.7742265 ,  0.30673012,        2.6573906 ], dtype=float32), 2), (array([-0.0272924 , -0.9996275 , -0.86162674,  0.5075425 ,  1.8643502 ,        0.8405506 ], dtype=float32), 0), (array([ 0.46654016, -0.8845    , -0.84470147,  0.5352377 ,  3.209363  ,       -1.2018644 ], dtype=float32), 0), (array([ 0.9384951 , -0.3452925 , -0.5187526 ,  0.85492444,  3.983607  ,       -3.4265852 ], dtype=float32), 0), (array([ 0.8994742 ,  0.4369739 ,  0.35349604,  0.935436  ,  3.9777315 ,       -5.577803  ], dtype=float32), 0), (array([ 0.3532032 ,  0.93554664,  0.99940753, -0.03441705,  3.4605696 ,       -6.451051  ], dtype=float32), 0), (array([-0.19532016,  0.98073953,  0.36474496, -0.93110746,  2.0336692 ,       -5.0350113 ], dtype=float32), 0), (array([-0.432344  ,  0.9017088 , -0.47844428, -0.8781179 ,  0.47394627,       -3.7489867 ], dtype=float32), 0), (array([-0.38127503,  0.92446166, -0.9050413 , -0.42532375, -1.0038339 ,       -2.5552294 ], dtype=float32), 0), (array([-0.05358151,  0.99856347, -0.9966713 , -0.08152504, -2.3449073 ,       -1.0052208 ], dtype=float32), 1), (array([ 0.5135692 ,  0.8580482 , -0.999409  , -0.03437541, -3.549986  ,        0.49554637], dtype=float32), 1), (array([ 0.97227246,  0.2338509 , -0.96760815, -0.25245678, -4.2682276 ,        1.6319641 ], dtype=float32), 1), (array([ 0.82383096, -0.5668355 , -0.79611284, -0.60514826, -3.9397874 ,        2.2030241 ], dtype=float32), 1), (array([ 0.28213543, -0.9593746 , -0.46875623, -0.8833276 , -2.8072693 ,        1.9825534 ], dtype=float32), 1), (array([-0.14444704, -0.98951256, -0.17917918, -0.98381644, -1.5043069 ,        0.9921624 ], dtype=float32), 1)]

train_e_mean, train_e_std, train_e_trajectories = 500, 0, [(array([-0.03921548,  0.23681921, -0.00037419, -0.30099759], dtype=float32), 1), (array([-0.0344791 ,  0.4319465 , -0.00639415, -0.5937985 ], dtype=float32), 1), (array([-0.02584017,  0.23691462, -0.01827012, -0.30313656], dtype=float32), 0), (array([-0.02110187,  0.04205775, -0.02433285, -0.01627114], dtype=float32), 0), (array([-0.02026072,  0.23752005, -0.02465827, -0.31653097], dtype=float32), 1), (array([-0.01551032,  0.04275785, -0.03098889, -0.03172526], dtype=float32), 0), (array([-0.01465516,  0.23831017, -0.03162339, -0.3340222 ], dtype=float32), 1), (array([-0.00988896,  0.04365225, -0.03830384, -0.05147702], dtype=float32), 0), (array([-0.00901591,  0.2393019 , -0.03933338, -0.35599482], dtype=float32), 1), (array([-0.00422987,  0.04476062, -0.04645327, -0.07596961], dtype=float32), 0), (array([-0.00333466, -0.14966567, -0.04797267,  0.20170285], dtype=float32), 0), (array([-0.00632797,  0.04610838, -0.04393861, -0.10571893], dtype=float32), 1), (array([-0.00540581, -0.14835726, -0.04605299,  0.17278421], dtype=float32), 0), (array([-0.00837295,  0.04739252, -0.04259731, -0.13406394], dtype=float32), 1), (array([-0.0074251 , -0.1470942 , -0.04527858,  0.14488168], dtype=float32), 0), (array([-0.01036699,  0.04864596, -0.04238095, -0.16173498], dtype=float32), 1), (array([-0.00939407, -0.14584446, -0.04561565,  0.1172824 ], dtype=float32), 0), (array([-0.01231096,  0.04990039, -0.04327   , -0.1894358 ], dtype=float32), 1), (array([-0.01131295, -0.14457667, -0.04705872,  0.08928934], dtype=float32), 0), (array([-0.01420448,  0.05118712, -0.04527293, -0.21786141], dtype=float32), 1), (array([-0.01318074, -0.14325939, -0.04963016,  0.0602038 ], dtype=float32), 0), (array([-0.01604593,  0.05253772, -0.04842608, -0.24771552], dtype=float32), 1), (array([-0.01499517, -0.14186038, -0.05338039,  0.02930809], dtype=float32), 0), (array([-0.01783238,  0.05398483, -0.05279423, -0.27972767], dtype=float32), 1), (array([-0.01675268, -0.14034581, -0.05838878, -0.00415214], dtype=float32), 0), (array([-0.0195596 ,  0.0555628 , -0.05847183, -0.31467083], dtype=float32), 1), (array([-0.01844834, -0.1386796 , -0.06476524, -0.04098609], dtype=float32), 0), (array([-0.02122194,  0.05730841, -0.06558497, -0.35337943], dtype=float32), 1), (array([-0.02007577, -0.13682263, -0.07265256, -0.08207709], dtype=float32), 0), (array([-0.02281222,  0.05926154, -0.0742941 , -0.39676848], dtype=float32), 1), (array([-0.02162699, -0.13473204, -0.08222947, -0.1284032 ], dtype=float32), 0), (array([-0.02432163, -0.32858562, -0.08479753,  0.13724644], dtype=float32), 0), (array([-0.03089334, -0.13235794, -0.0820526 , -0.1809381 ], dtype=float32), 1), (array([-0.0335405 , -0.32621574, -0.08567137,  0.08477387], dtype=float32), 0), (array([-0.04006482, -0.12997687, -0.08397589, -0.23366144], dtype=float32), 1), (array([-0.04266435, -0.32380483, -0.08864912,  0.03139604], dtype=float32), 0), (array([-0.04914045, -0.12753083, -0.0880212 , -0.2878876 ], dtype=float32), 1), (array([-0.05169107, -0.3212945 , -0.09377895, -0.02421215], dtype=float32), 0), (array([-0.05811695, -0.12496149, -0.09426319, -0.3449482 ], dtype=float32), 1), (array([-0.06061618, -0.31862494, -0.10116215, -0.08341502], dtype=float32), 0), (array([-0.06698868, -0.12220933, -0.10283045, -0.40622315], dtype=float32), 1), (array([-0.06943287, -0.31573424, -0.11095492, -0.14764811], dtype=float32), 0), (array([-0.07574756, -0.5091068 , -0.11390788,  0.10807332], dtype=float32), 0), (array([-0.08592969, -0.31255248, 
-0.11174642, -0.21826412], dtype=float32), 1), (array([-0.09218074, -0.5059144 , -0.1161117 ,  0.03718457], dtype=float32), 0), (array([-0.10229903, -0.30933532, -0.115368  , -0.28975868], dtype=float32), 1), (array([-0.10848574, -0.5026394 , -0.12116317, -0.0355731 ], dtype=float32), 0), (array([-0.11853852, -0.6958343 , -0.12187464,  0.2165598 ], dtype=float32), 0), (array([-0.13245521, -0.88902223, -0.11754344,  0.4684498 ], dtype=float32), 0), (array([-0.15023565, -0.69245297, -0.10817445,  0.14115219], dtype=float32), 1), (array([-0.16408472, -0.4959614 , -0.1053514 , -0.18360369], dtype=float32), 1), (array([-0.17400394, -0.68943053, -0.10902348,  0.07407498], dtype=float32), 0), (array([-0.18779255, -0.8828343 , -0.10754198,  0.33046883], dtype=float32), 0), (array([-0.20544924, -0.686359  , -0.10093261,  0.00590196], dtype=float32), 1), (array([-0.21917641, -0.87989944, -0.10081457,  0.26511133], dtype=float32), 0), (array([-0.2367744 , -1.0734488 , -0.09551234,  0.5243719 ], dtype=float32), 0), (array([-0.25824338, -0.8771216 , -0.0850249 ,  0.20318545], dtype=float32), 1), (array([-0.2757858 , -0.6808931 , -0.08096119, -0.11506121], dtype=float32), 1), (array([-0.28940368, -0.8747673 , -0.08326241,  0.15102088], dtype=float32), 0), (array([-0.306899  , -1.0686044 , -0.08024199,  0.41631842], dtype=float32), 0), (array([-0.32827112, -0.87244236, -0.07191563,  0.0994563 ], dtype=float32), 1), (array([-0.34571996, -0.67636734, -0.0699265 , -0.21502095], dtype=float32), 1), (array([-0.3592473 , -0.87042356, -0.07422692,  0.05481033], dtype=float32), 0), (array([-0.3766558 , -1.0644071 , -0.07313071,  0.3231817 ], dtype=float32), 0), (array([-0.3979439 , -0.8683241 , -0.06666708,  0.00836209], dtype=float32), 1), (array([-0.4153104 , -1.0624298 , -0.06649984,  0.27928817], dtype=float32), 0), (array([-0.436559  , -0.8664253 , -0.06091407, -0.03360522], dtype=float32), 1), (array([-0.4538875 , -1.0606232 , -0.06158618,  0.23925373], dtype=float32), 0), (array([-0.47509995, -0.86467797, -0.0568011 , -0.07220175], dtype=float32), 1), (array([-0.49239352, -1.0589416 , -0.05824514,  0.2020331 ], dtype=float32), 0), (array([-0.51357234, -0.86303705, -0.05420448, -0.10843971], dtype=float32), 1), (array([-0.5308331 , -1.057342  , -0.05637327,  0.1666614 ], dtype=float32), 0), (array([-0.55197996, -0.8614604 , -0.05304004, -0.14325935], dtype=float32), 1), (array([-0.56920916, -1.0557842 , -0.05590523,  0.13222998], dtype=float32), 0), (array([-0.5903248 , -1.2500626 , -0.05326063,  0.40676478], dtype=float32), 0), (array([-0.6153261 , -1.0542275 , -0.04512534,  0.09777738], dtype=float32), 1), (array([-0.63641065, -0.8584888 , -0.04316979, -0.20879409], dtype=float32), 1), (array([-0.6535804 , -1.0529677 , -0.04734567,  0.06996456], dtype=float32), 0), (array([-0.67463976, -1.24738  
 , -0.04594638,  0.34734184], dtype=float32), 0), (array([-0.69958735, -1.0516357 , -0.03899954,  0.0405317 ], dtype=float32), 1), (array([-0.7206201 , -1.2461773 , -0.03818891,  0.3206593 ], dtype=float32), 0), (array([-0.7455436 , -1.0505329 , -0.03177572,  0.01618185], dtype=float32), 1), (array([-0.7665543 , -1.2451851 , -0.03145209,  0.29867223], dtype=float32), 0), (array([-0.791458  , -1.0496293 , -0.02547864, -0.00376183], dtype=float32), 1), (array([-0.8124506 , -1.2443768 , -0.02555388,  0.28077462], dtype=float32), 0), (array([-0.8373381 , -1.0488998 , -0.01993838, -0.01985711], dtype=float32), 1), (array([-0.8583161 , -1.2437302 , -0.02033553,  0.26646894], dtype=float32), 0), (array([-0.8831907 , -1.048324  , -0.01500615, -0.03255798], dtype=float32), 1), (array([-0.90415716, -1.2432276 , -0.01565731,  0.25535282], dtype=float32), 0), (array([-0.9290217 , -1.0478857 , -0.01055025, -0.04222725], dtype=float32), 1), (array([-0.9499794 , -1.2428547 , -0.01139479,  0.24710838], dtype=float32), 0), (array([-0.9748365 , -1.0475719 , -0.00645263, -0.04914683], dtype=float32), 1), (array([-0.995788  , -1.2426007 , -0.00743556,  0.24149327], dtype=float32), 
0), (array([-1.02064   , -1.0473733 , -0.0026057 , -0.05352572], dtype=float32), 1), (array([-1.0415875 , -1.2424579 , -0.00367621,  0.23833396], dtype=float32), 0), (array([-1.0664366 , -1.0472835 ,  0.00109047, -0.05550629], dtype=float32), 1), (array([-1.0873823e+00, -1.2424212e+00, -1.9659137e-05,  2.3752049e-01],
      dtype=float32), 0), (array([-1.1122307 , -1.0472989 ,  0.00473075, -0.05516864], dtype=float32), 1), (array([-1.1331767 , -1.2424884 ,  0.00362738,  0.2390031 ], dtype=float32), 0), (array([-1.1580265 , -1.0474184 ,  0.00840744, -0.05253343], dtype=float32), 1), (array([-1.1789749 , -1.2426599 ,  0.00735677,  0.2427902 ], dtype=float32), 0), (array([-1.203828  , -1.0476438 ,  0.01221258, -0.04756315], dtype=float32), 1), (array([-1.2247809 , -1.2429388 ,  0.01126131,  0.24894778], dtype=float32), 0), (array([-1.2496396 , -1.0479794 ,  0.01624027, -0.04016191], dtype=float32), 1), (array([-1.2705992 , -1.2433304 ,  0.01543703,  0.25760043], dtype=float32), 0), (array([-1.2954658 , -1.0484322 , 
 0.02058904, -0.03017375], dtype=float32), 1), (array([-1.3164345 , -1.2438433 ,  0.01998556,  0.26893348], dtype=float32), 0), (array([-1.3413113 , -1.0490122 ,  0.02536423, -0.01737948], dtype=float32), 1), (array([-1.3622916 , -1.2444885 ,  0.02501664,  0.28319702], dtype=float32), 0), (array([-1.3871814 , -1.0497321 ,  0.03068058, -0.001492  ], dtype=float32), 1), (array([-1.4081761 , -1.2452804 ,  0.03065074,  0.30071095], dtype=float32), 0), (array([-1.4330816 , -1.0506084 ,  0.03666496,  0.01785006], dtype=float32), 1), (array([-1.4540938 , -1.2462364 ,  0.03702196,  0.32187203], dtype=float32), 0), (array([-1.4790186, -1.0516608,  0.0434594,  0.0410904], dtype=float32), 1), (array([-1.5000517 , -1.2473781 ,  0.04428121,  0.34716225], dtype=float32), 0), (array([-1.5249993 , -1.052913  ,  0.05122446,  0.06876504], dtype=float32), 1), (array([-1.5460576 , -0.85856146,  0.05259976, -0.20732649], dtype=float32), 1), (array([-1.5632288 , -1.0543946 ,  0.04845323,  0.10147409], dtype=float32), 0), (array([-1.5843167 , -1.2501762 ,  0.05048271,  0.4090416 ], dtype=float32), 0), (array([-1.6093202 , -1.055805  ,  0.05866354,  0.13269185], dtype=float32), 1), (array([-1.6304363 , -0.8615703 ,  0.06131738, -0.14092185], dtype=float32), 1), (array([-1.6476678 , -1.0575144 ,  0.05849894,  0.17045796], dtype=float32), 0), (array([-1.668818  , -0.8632764 ,  0.0619081 , -0.10321174], dtype=float32), 
1), (array([-1.6860836 , -1.0592284 ,  0.05984387,  0.20834257], dtype=float32), 0), (array([-1.7072681 , -0.865011  ,  0.06401072, -0.06487852], dtype=float32), 1), (array([-1.7245684 , -1.0609895 ,  0.06271315,  0.24729352], dtype=float32), 0), (array([-1.7457881 , -0.86681664,  0.06765902, -0.0249676 ], dtype=float32), 1), (array([-1.7631245 , -1.0628403 ,  0.06715967,  0.2882718 ], dtype=float32), 0), (array([-1.7843813 , -0.8687372 ,  0.07292511,  0.01750355], dtype=float32), 1), (array([-1.801756  , -0.67473274,  0.07327517, -0.2513087 ], dtype=float32), 1), (array([-1.8152506 , -0.8708204 ,  0.068249  ,  0.06355712], dtype=float32), 0), (array([-1.8326671 , -1.0668511 ,  0.06952014,  0.3769683 ], dtype=float32), 0), (array([-1.8540041 , -0.8727819 ,  0.07705951,  0.10699005], dtype=float32), 1), (array([-1.8714597 , -0.678844  ,  0.07919931, -0.16042048], dtype=float32), 1), (array([-1.8850366 , -0.8750052 ,  0.0759909 ,  0.15615927], dtype=float32), 0), (array([-1.9025367 , -0.68104887,  0.07911409, -0.11161579], dtype=float32), 1), (array([-1.9161577 , -0.8772101 ,  0.07688177,  0.20494097], dtype=float32), 0), (array([-1.9337019 , -0.68326694,  0.08098059, -0.06253339], dtype=float32), 1), (array([-1.9473672 , -0.4893938 ,  0.07972992, -0.32860777], dtype=float32), 1), (array([-1.9571551 , -0.6855549 ,  0.07315776, -0.01188506], dtype=float32), 0), (array([-1.9708662 , -0.8816457 ,  
0.07292006,  0.30295348], dtype=float32), 0), (array([-1.9884992 , -0.68763465,  0.07897913,  0.03412979], dtype=float32), 1), (array([-2.0022519 , -0.49372888,  0.07966173, -0.23262644], dtype=float32), 1), (array([-2.0121264 , -0.68989336,  0.0750092 ,  0.08408295], dtype=float32), 0), (array([-2.0259242 , -0.4959223 ,  0.07669086, -0.18402347], dtype=float32), 1), (array([-2.0358427 , -0.692053  ,  0.07301039,  0.13183291], dtype=float32), 0), (array([-2.0496838 , 
-0.49804875,  0.07564705, -0.13695228], dtype=float32), 1), (array([-2.0596447 , -0.6941681 ,  0.072908  ,  0.17860448], dtype=float32), 0), (array([-2.073528  , -0.5001611 ,  0.07648009, -0.09021693], dtype=float32), 1), (array([-2.0835314 , -0.30621397,  0.07467575, -0.357824  ], dtype=float32), 1), (array([-2.0896556 , -0.50231373,  0.06751927, -0.04255989], dtype=float32), 0), (array([-2.099702  , -0.69833565,  0.06666808,  0.2706386 ], dtype=float32), 0), (array([-2.1136687e+00, -5.0422525e-01,  7.2080851e-02, -2.9424802e-04],
      dtype=float32), 1), (array([-2.123753  , -0.3102071 ,  0.07207496, -0.26939234], dtype=float32), 1), (array([-2.1299572 , -0.50627965,  0.06668711,  0.04512458], dtype=float32), 0), (array([-2.1400828 , -0.3121742 ,  0.06758961, -0.22579496], dtype=float32), 1), (array([-2.1463263 , -0.50819373,  0.06307371,  0.08741923], dtype=float32), 0), (array([-2.15649   , -0.31402993,  0.06482209, -0.18471596], dtype=float32), 1), (array([-2.1627707 , -0.5100166 ,  0.06112777,  0.12769097], dtype=float32), 0), (array([-2.172971  , -0.3158212 ,  0.0636816 , -0.14509772], dtype=float32), 1), (array([-2.1792874 , -0.51179457,  0.06077964,  0.16697624], dtype=float32), 0), (array([-2.1895235 , -0.31759292, 
 0.06411917, -0.10593012], dtype=float32), 1), (array([-2.1958752 , -0.51357234,  0.06200056,  0.20627305], dtype=float32), 0), (array([-2.2061467 , -0.31938928,  0.06612603, -0.06622542], dtype=float32), 1), (array([-2.2125344 , -0.12527464,  0.06480151, -0.33733413], dtype=float32), 1), (array([-2.21504   , -0.321256  ,  0.05805483, -0.02494075], dtype=float32), 0), (array([-2.221465  , -0.5171604 ,  0.05755602,  0.28547928], dtype=float32), 0), (array([-2.2318084 , -0.32290453,  0.0632656 ,  0.01149011], dtype=float32), 1), (array([-2.2382665 , -0.12874424,  0.06349541, -0.26057997], dtype=float32), 1), (array([-2.2408414 , -0.32471243,  0.05828381,  0.05143507], dtype=float32), 0), (array([-2.2473357 , -0.13047254,  0.05931251, -0.2223043 ], dtype=float32), 1), (array([-2.249945  , -0.3263899 ,  0.05486642,  0.08848262], dtype=float32), 0), (array([-2.2564728 , -0.13209558,  0.05663607, -0.18639769], dtype=float32), 1), (array([-2.2591147 , -0.3279802 ,  0.05290812,  0.12360022], dtype=float32), 0), (array([-2.2656744 , -0.13365458,  0.05538012, -0.15193258], dtype=float32), 1), (array([-2.2683475 , -0.32952398,  0.05234147,  0.15769453], dtype=float32), 0), (array([-2.2749379 , -0.13518897,  0.05549536, -0.11802741], dtype=float32), 1), (array([-2.2776418 , -0.33106032,  0.05313481,  0.19163458], dtype=float32), 0), (array([-2.284263  , -0.13673717,  0.05696751, -0.08382448], dtype=float32), 1), (array([-2.2869976 , -0.3326275 ,  0.05529102,  0.22627373], dtype=float32), 0), (array([-2.2936502 , -0.13833754,  0.05981649, -0.04846856], dtype=float32), 1), (array([-2.296417  , -0.33426392,  0.05884712,  0.26247096], dtype=float32), 0), (array([-2.3031023 , -0.14002919,  0.06409654, -0.01108573], dtype=float32), 1), (array([-2.3059027 ,  0.05411776,  0.06387483, -0.28287667], dtype=float32), 1), (array([-2.3048205 , -0.14185435,  0.05821729,  0.02924846], dtype=float32), 0), (array([-2.3076575 ,  0.0523865 ,  0.05880226, -0.24451299], dtype=float32), 1), (array([-2.3066099 , -0.14352389,  0.053912  ,  0.06612259], dtype=float32), 0), (array([-2.3094802 ,  0.05078533,  0.05523445, -0.20907532], dtype=float32), 1), (array([-2.3084645 , -0.14508112,  0.05105295,  0.10050698], dtype=float32), 0), (array([-2.311366  ,  0.0492734 ,  0.05306309, -0.17564191], dtype=float32), 1), (array([-2.3103807 , -0.14656621,  0.04955025,  0.13329728], dtype=float32), 0), (array([-2.313312  ,  0.04781224,  0.05221619, -0.14335074], dtype=float32), 1), (array([-2.3123558 , -0.14801712,  0.04934918,  0.16533753], dtype=float32), 0), (array([-2.3153162 ,  0.04636494,  0.05265593, -0.11137782], dtype=float32), 1), (array([-2.3143888 , -0.14947045,  0.05042837,  0.1974418 ], dtype=float32), 0), (array([-2.3173783 ,  0.04489529,  0.05437721, -0.07891652], dtype=float32), 1), (array([-2.3164804 , -0.15096231,  0.05279888,  0.23041467], dtype=float32), 0), (array([-2.3194995 ,  0.04336696,  0.05740717, -0.04515738], dtype=float32), 1), (array([-2.3186324 , -0.15252918,  0.05650403,  0.2650712 ], dtype=float32), 0), (array([-2.321683  ,  0.04174268,  0.06180545, -0.00926816], dtype=float32), 1), (array([-2.320848  ,  0.2359263 ,  0.06162009, -0.28182822], dtype=float32), 1), (array([-2.3161294 ,  0.03998201,  0.05598352,  0.02963524], dtype=float32), 0), (array([-2.3153298 ,  0.2342583 ,  0.05657623, -0.24487208], dtype=float32), 1), (array([-2.3106446 ,  0.03837582,  0.05167878,  0.06510605], dtype=float32), 0), (array([-2.3098772 ,  0.23272021,  0.05298091, -0.21083455], dtype=float32), 1), (array([-2.3052227 ,  0.03688234,  0.04876421,  0.09807917], dtype=float32), 0), (array([-2.304485  ,  0.23127271,  0.0507258 , -0.17882876], dtype=float32), 1), (array([-2.2998595 ,  0.03546294,  0.04714922,  0.12941508], dtype=float32), 0), (array([-2.2991505 ,  0.22987887,  0.04973752, -0.148028  ], dtype=float32), 1), (array([-2.2945528 ,  0.03408127,  0.04677697,  0.15992202], dtype=float32), 0), (array([-2.2938712 ,  0.2285034 ,  0.04997541, -0.11764478], dtype=float32), 
1), (array([-2.2893012 ,  0.03270235,  0.04762251,  0.19037676], dtype=float32), 0), (array([-2.288647  ,  0.2271118 ,  0.05143005, -0.08691107], dtype=float32), 1), (array([-2.2841048 ,  0.03129182,  0.04969182,  0.2215443 ], dtype=float32), 0), (array([-2.283479  ,  0.22566958,  0.05412271, -0.05505905], dtype=float32), 1), (array([-2.2789655 ,  0.02981504,  0.05302153,  0.25419688], dtype=float32), 0), (array([-2.2783692 ,  0.22414142,  0.05810547, -0.02130201], dtype=float32), 1), (array([-2.2738864 ,  0.41838402,  0.05767943, -0.2951008 ], dtype=float32), 1), (array([-2.2655187 ,  0.22248922,  0.05177741,  0.01520108], dtype=float32), 0), (array([-2.261069  ,  0.41683185,  0.05208143, -0.26070645], dtype=float32), 1), (array([-2.2527323 ,  0.22100662,  0.0468673 ,  0.04793815], dtype=float32), 0), (array([-2.2483122 ,  0.41542628,  0.04782607, -0.22959718], dtype=float32), 1), (array([-2.2400036 ,  0.21965468,  0.04323412,  0.07777994], dtype=float32), 0), (array([-2.2356107 ,  0.41413105,  0.04478972, -0.20095512], dtype=float32), 1), (array([-2.227328  ,  0.21839808,  0.04077062,  0.10551365], dtype=float32), 0), (array([-2.22296   ,  0.41291276,  0.04288089, -0.17403267], dtype=float32), 1), (array([-2.2147017 ,  0.21720417,  0.03940024,  0.13186347], dtype=float32), 0), (array([-2.2103577 ,  0.41174024,  0.04203751, -0.14813347], dtype=float32), 1), (array([-2.202123  ,  0.2160423 ,  
0.03907484,  0.15750948], dtype=float32), 0), (array([-2.197802  ,  0.41058365,  0.04222503, -0.12259473], dtype=float32), 1), (array([-2.1895905 ,  0.21488298,  0.03977313,  0.18310508], dtype=float32), 0), (array([-2.1852927 ,  0.40941393,  0.04343523, -0.09677035], dtype=float32), 1), (array([-2.1771045 ,  0.21369724,  0.04149983,  0.20929375], dtype=float32), 0), (array([-2.1728306 ,  0.40820196,  0.0456857 , -0.07001472], dtype=float32), 1), (array([-2.1646664 , 
 0.6026402 ,  0.04428541, -0.34794077], dtype=float32), 1), (array([-2.1526136 ,  0.40691724,  0.03732659, -0.04162855], dtype=float32), 0), (array([-2.1444752 ,  0.6014846 ,  0.03649402, -0.32230484], dtype=float32), 1), (array([-2.1324456 ,  0.4058625 ,  0.03004793, -0.01834019], dtype=float32), 0), (array([-2.1243284 ,  0.60054094,  0.02968112, -0.30139327], dtype=float32), 1), (array([-2.1123176e+00,  4.0500879e-01,  2.3653256e-02,  5.0073501e-04],
      dtype=float32), 0), (array([-2.1042173 ,  0.59978366,  0.02366327, -0.28462645], dtype=float32), 1), (array([-2.0922217 ,  0.40433237,  0.01797074,  0.01542479], dtype=float32), 0), (array([-2.084135  ,  0.20895736,  0.01827924,  
0.3137231 ], dtype=float32), 0), (array([-2.0799558 ,  0.4038142 ,  0.0245537 ,  0.02686043], dtype=float32), 1), (array([-2.0718796 ,  0.5985756 ,  0.02509091, -0.25797552], dtype=float32), 1), (array([-2.0599082 ,  0.40310457,  0.0199314 ,  0.04251466], dtype=float32), 0), (array([-2.051846  ,  0.59793514,  0.02078169, -0.24381368], dtype=float32), 1), (array([-2.0398872 ,  0.40252262,  0.01590542,  0.05535119], dtype=float32), 0), (array([-2.0318367 ,  0.59741294, 
 0.01701244, -0.23227133], dtype=float32), 1), (array([-2.0198886 ,  0.40205207,  0.01236701,  0.06572897], dtype=float32), 0), (array([-2.0118475 ,  0.5969946 ,  0.01368159, -0.22302657], dtype=float32), 1), (array([-1.9999076 ,  0.40167975,  0.00922106,  0.07394047], dtype=float32), 0), (array([-1.9918741 ,  0.5966683 ,  0.01069987, -0.21581897], dtype=float32), 1), (array([-1.9799407 ,  0.40139502,  0.00638349,  0.08021986], dtype=float32), 0), (array([-1.9719127 ,  0.5964249 ,  0.00798789, -0.21044223], dtype=float32), 1), (array([-1.9599843 ,  0.40118966,  0.00377904,  0.08474971], dtype=float32), 0), (array([-1.9519604 ,  0.5962572 ,  0.00547404, -0.20673853], dtype=float32), 1), (array([-1.9400353e+00,  4.0105742e-01,  1.3392681e-03,  8.7666139e-02],
      dtype=float32), 0), (array([-1.9320142 ,  0.5961602 ,  0.00309259, -0.20459394], dtype=float32), 1), (array([-1.9200910e+00,  4.0099412e-01, -9.9928805e-04,  8.9062937e-02],
      dtype=float32), 0), (array([-1.9120711e+00,  5.9613037e-01,  7.8197068e-04, -2.0393510e-01],
      dtype=float32), 1), (array([-1.9001485 ,  0.40099725, -0.00329673,  0.0889944 ], dtype=float32), 0), (array([-1.8921286e+00,  5.9616631e-01, -1.5168433e-03, -2.0472682e-01],
      dtype=float32), 1), (array([-1.8802053 ,  0.40106606, -0.00561138,  0.08747723], dtype=float32), 0), (array([-1.8721839 ,  0.596268  , -0.00386184, -0.2069708 ], dtype=float32), 1), (array([-1.8602586 ,  0.4012015 , -0.00800125,  
0.08449142], dtype=float32), 0), (array([-1.8522345 ,  0.5964372 , -0.00631142, -0.21070515], dtype=float32), 1), (array([-1.8403058 ,  0.40140608, -0.01052553,  0.0799802 ], dtype=float32), 0), (array([-1.8322777 ,  0.5966773 , -0.00892592, -0.21600488], dtype=float32), 1), (array([-1.8203441 ,  0.4016841 , -0.01324602,  0.0738491 ], dtype=float32), 0), (array([-1.8123105 ,  0.59699345, -0.01176904, -0.22298339], dtype=float32), 1), (array([-1.8003706 ,  0.40204164, 
-0.01622871,  0.06596401], dtype=float32), 0), (array([-1.7923298 ,  0.20715608, -0.01490942,  0.3534828 ], dtype=float32), 0), (array([-1.7881867 ,  0.40248683, -0.00783977,  0.05613606], dtype=float32), 1), (array([-1.7801368 ,  0.5977203 , -0.00671705, -0.23901002], dtype=float32), 1), (array([-1.7681825 ,  0.40269497, -0.01149725,  0.05154661], dtype=float32), 0), (array([-1.7601286 ,  0.59797984, -0.01046632, -0.24474151], dtype=float32), 1), (array([-1.748169  ,  0.40300897, -0.01536115,  0.0446218 ], dtype=float32), 0), (array([-1.7401088 ,  0.5983478 , -0.01446871, -0.25286785], dtype=float32), 1), (array([-1.7281418 ,  0.40343538, -0.01952607,  0.03521648], dtype=float32), 0), (array([-1.7200731 ,  0.2085988 , -0.01882174,  0.32167533], dtype=float32), 0), (array([-1.7159011 ,  0.40398365, -0.01238823,  0.0231167 ], dtype=float32), 1), (array([-1.7078215 ,  0.5992811 , -0.0119259 , -0.27344897], dtype=float32), 1), (array([-1.6958358 ,  0.40433127, -0.01739488,  0.01544877], dtype=float32), 0), (array([-1.6877493 ,  0.20946305, -0.0170859 ,  0.30259305], dtype=float32), 0), (array([-1.68356   ,  0.4048243 , -0.01103404,  0.00457095], dtype=float32), 1), (array([-1.6754634 ,  0.6001027 , -0.01094262, -0.29157284], dtype=float32), 1), (array([-1.6634614 ,  0.4051385 , -0.01677408, -0.00236106], dtype=float32), 0), (array([-1.6553587 ,  0.21026109, -0.0168213 ,  0.2849826 ], dtype=float32), 0), (array([-1.6511534 ,  0.40561885, -0.01112165, -0.01295782], dtype=float32), 1), (array([-1.643041 ,  0.6008985, -0.0113808, -0.3091289], dtype=float32), 1), (array([-1.631023  ,  0.40594056, -0.01756338, -0.02005679], dtype=float32), 0), (array([-1.6229043 ,  0.21107484, -0.01796452,  0.26703334], dtype=float32), 0), (array([-1.6186827 ,  0.4064485 , -0.01262385, -0.03126115], dtype=float32), 1), (array([-1.6105539 ,  0.6017492 , -0.01324907, -0.32790014], dtype=float32), 1), (array([-1.5985188 ,  0.40681836, -0.01980708, -0.03942465], dtype=float32), 0), (array([-1.5903825 ,  0.21198595, -0.02059557,  0.24694373], dtype=float32), 0), (array([-1.5861428 ,  0.4073959 , -0.01565669, -0.05216371], dtype=float32), 1), (array([-1.5779948 ,  0.2125019 , -0.01669997,  0.23553857], dtype=float32), 0), (array([-1.5737448 ,  0.40785843, -0.0119892 , -0.06236491], dtype=float32), 1), (array([-1.5655876 ,  0.6031502 , -0.01323649, -0.35880625], dtype=float32), 1), (array([-1.5535246 ,  0.4082189 , -0.02041262, -0.07032633], dtype=float32), 0), (array([-1.5453602 ,  0.21339545, -0.02181915,  0.21584706], dtype=float32), 0), (array([-1.5410923 ,  0.40882242, -0.01750221, -0.08363794], dtype=float32), 1), (array([-1.5329158 ,  0.21395567, -0.01917496,  0.20347203], dtype=float32), 0), (array([-1.5286368 ,  0.40934652, -0.01510552, -0.09519746], dtype=float32), 1), (array([-1.5204499 ,  0.2144443 , -0.01700947,  0.19268167], dtype=float32), 0), (array([-1.516161  ,  0.4098054 , -0.01315584, -0.10531812], dtype=float32), 1), (array([-1.5079648 ,  0.6051134 , -0.0152622 , -0.40212247], dtype=float32), 1), (array([-1.4958626 ,  0.41021118, -0.02330465, -0.11429013], dtype=float32), 0), (array([-1.4876584 ,  0.21543078, -0.02559045,  0.17095019], dtype=float32), 0), (array([-1.4833497 ,  0.41090947, -0.02217145, -0.12969463], dtype=float32), 1), (array([-1.4751315 , 
 0.21611203, -0.02476534,  0.15591185], dtype=float32), 0), (array([-1.4708093 ,  0.41157967, -0.0216471 , -0.14447993], dtype=float32), 1), (array([-1.4625777,  0.2167743, -0.0245367,  0.1412959], dtype=float32), 0), (array([-1.4582422 ,  0.41223893, -0.02171079, -0.15902585], dtype=float32), 1), (array([-1.4499974 ,  0.2174344 , -0.0248913 ,  0.12672958], dtype=float32), 0), (array([-1.4456488 ,  0.41290393, -0.02235671, -0.17370118], dtype=float32), 1), (array([-1.4373907 ,  0.21810898, -0.02583073,  0.11184592], dtype=float32), 0), (array([-1.4330285 ,  0.41359136, -0.02359382, -0.18887323], dtype=float32), 1), (array([-1.4247566 ,  0.21881476, -0.02737128,  0.09627441], dtype=float32), 0), (array([-1.4203804 ,  0.41431808, -0.02544579, -0.2049169 ], dtype=float32), 1), (array([-1.412094  ,  0.2195691 , -0.02954413,  0.07963177], dtype=float32), 0), (array([-1.4077027 ,  0.41510186, -0.0279515 , -0.22222406], dtype=float32), 1), (array([-1.3994006 ,  0.22039033, -0.03239598,  0.06151245], dtype=float32), 0), (array([-1.3949928 ,  0.41596144, -0.03116573, -0.24121302], dtype=float32), 1), (array([-1.3866736 ,  0.22129822, -0.03598999,  0.04147876], dtype=float32), 0), (array([-1.3822476 ,  0.41691726, -0.03516041, -0.26233858], dtype=float32), 1), (array([-1.3739092 ,  0.2223144 , -0.04040718,  0.01905029], dtype=float32), 0), (array([-1.369463  ,  0.41799185, -0.04002618, -0.28610277], dtype=float32), 1), (array([-1.3611032 ,  0.22346291, -0.04574823, -0.00630763], dtype=float32), 0), (array([-1.3566339 ,  0.02902589, -0.04587439,  0.27159745], dtype=float32), 0), (array([-1.3560534 ,  0.2247714 , -0.04044244, -0.03519426], dtype=float32), 1), (array([-1.351558  ,  0.03025204, -0.04114632,  0.24445936], dtype=float32), 0), (array([-1.3509529 ,  0.2259368 , -0.03625714, -0.06091294], dtype=float32), 1), (array([-1.3464341 ,  0.42155933, -0.0374754 , -0.36481115], dtype=float32), 1), (array([-1.3380029 ,  0.22698945, -0.04477162, -0.08417644], dtype=float32), 0), (array([-1.3334632 ,  0.03253692, -0.04645514,  0.19405161], dtype=float32), 0), (array([-1.3328124 ,  0.22829156, -0.04257412, -0.11291645], dtype=float32), 1), (array([-1.3282466 ,  0.03380469, -0.04483244,  0.16603649], dtype=float32), 0), (array([-1.3275706 ,  0.22953877, -0.04151171, -0.14044595], dtype=float32), 1), (array([-1.3229797 ,  0.03503519, -0.04432063,  0.13885714], dtype=float32), 0), (array([-1.322279  ,  0.23076299, -0.04154349, -0.16747224], dtype=float32), 1), (array([-1.3176638 ,  0.03625955, -0.04489293,  0.1118209 ], dtype=float32), 0), (array([-1.3169386 ,  0.23199508, -0.04265651, -0.19468066], dtype=float32), 1), (array([-1.3122987 ,  0.03750844, -0.04655013,  0.0842467 ], dtype=float32), 0), (array([-1.3115485 ,  0.23326568, -0.04486519, -0.22275187], dtype=float32), 1), (array([-1.3068832 ,  
0.03881276, -0.04932023,  0.05544807], dtype=float32), 0), (array([-1.3061069 ,  0.23460592, -0.04821127, -0.25237882], dtype=float32), 1), (array([-1.3014148 ,  0.04020436, -0.05325885,  0.02471607], dtype=float32), 0), (array([-1.3006108 , -0.15411496, -0.05276453,  0.30013105], dtype=float32), 0), (array([-1.303693  ,  0.04171781, -0.0467619 , -0.00871485], dtype=float32), 1), (array([-1.3028587 ,  0.23747812, -0.0469362 , -0.3157773 ], dtype=float32), 1), (array([-1.2981092 ,  0.04305506, -0.05325175, -0.03825809], dtype=float32), 0), (array([-1.297248  , -0.15126441, -0.05401691,  0.23715933], dtype=float32), 0), (array([-1.3002733 ,  0.04458597, -0.04927373, -0.07206102], dtype=float32), 1), (array([-1.2993816 , -0.1497962 , -0.05071494,  0.20467776], dtype=float32), 0), (array([-1.3023775 ,  0.04601293, -0.04662139, -0.10356212], dtype=float32), 1), (array([-1.3014573 , -0.14841096, -0.04869263,  0.17405511], dtype=float32), 0), (array([-1.3044255 ,  0.04737284, -0.04521153, -0.13358249], dtype=float32), 1), (array([-1.303478  , -0.14707333, -0.04788318,  0.14450105], dtype=float32), 0), (array([-1.3064195 ,  0.0487005 , -0.04499316, -0.16289537], dtype=float32), 1), (array([-1.3054454 , -0.14574943, -0.04825107,  0.11526082], dtype=float32), 0), (array([-1.3083605 ,  0.05002948, -0.04594585, -0.19224608], dtype=float32), 1), (array([-1.3073598 , -0.14440611, -0.04979077,  0.0855962 ], 
dtype=float32), 0), (array([-1.310248  , -0.33878028, -0.04807885,  0.3621637 ], dtype=float32), 0), (array([-1.3170236 , -0.14300913, -0.04083557,  0.05471654], dtype=float32), 1), (array([-1.3198838 , -0.33752248, -0.03974124,  0.33424103], dtype=float32), 0), (array([-1.3266343 , -0.14185812, -0.03305642,  0.02929536], dtype=float32), 1), (array([-1.3294713 ,  0.05372191, -0.03247051, -0.27363122], dtype=float32), 1), (array([-1.3283969 , -0.14092205, -0.03794314, 
 0.00863617], dtype=float32), 0), (array([-1.3312154 , -0.3354799 , -0.03777042,  0.28911027], dtype=float32), 0), (array([-1.337925  , -0.13984026, -0.03198821, -0.01524174], dtype=float32), 1), (array([-1.3407218 , -0.3344892 , -0.03229304,  0.26717937], dtype=float32), 0), (array([-1.3474116 , -0.1389216 , -0.02694946, -0.03551157], dtype=float32), 1), (array([-1.35019   , -0.33364692, -0.02765969,  0.24854818], dtype=float32), 0), (array([-1.3568629 , -0.13814111, -0.02268873, -0.05272929], dtype=float32), 1), (array([-1.3596258 ,  0.05729869, -0.02374331, -0.35248345], dtype=float32), 1), (array([-1.3584799 , -0.13747773, -0.03079298, -0.06738107], dtype=float32), 0), (array([-1.3612293 , -0.33214498, -0.0321406 ,  0.21542966], dtype=float32), 0), (array([-1.3678722 , -0.13657862, -0.02783201, -0.08721606], dtype=float32), 1), (array([-1.3706038 , -0.3312908 , -0.02957633,  0.19655755], dtype=float32), 0), (array([-1.3772297 
, -0.13575855, -0.02564518, -0.10530672], dtype=float32), 1), (array([-1.3799448 , -0.3305038 , -0.02775131,  0.17917621], dtype=float32), 0), (array([-1.3865548 , -0.13499592, -0.02416779, -0.12213049], dtype=float32), 1), (array([-1.3892548 , -0.32976344, -0.0266104 ,  0.16283083], dtype=float32), 0), (array([-1.3958501 , -0.13427086, -0.02335378, -0.13812678], dtype=float32), 1), (array([-1.3985355 , -0.32905066, -0.02611632,  0.14709789], dtype=float32), 0), (array([-1.4051166 , -0.52378905, -0.02317436,  0.43142855], dtype=float32), 0), (array([-1.4155923 , -0.32834676, -0.01454579,  0.13153118], dtype=float32), 1), (array([-1.4221592 , -0.1330195 , -0.01191516, -0.16570504], dtype=float32), 1), (array([-1.4248196 , -0.3279689 , -0.01522927,  0.12319531], dtype=float32), 0), (array([-1.431379  , -0.1326321 , -0.01276536, -0.17425314], dtype=float32), 1), (array([-1.4340316 , -0.32756907, -0.01625042,  0.11437556], dtype=float32), 0), (array([-1.440583  , -0.13221808, -0.01396291, -0.18338963], dtype=float32), 1), (array([-1.4432274 , -0.32713747, -0.0176307 ,  0.10485601], dtype=float32), 0), (array([-1.4497701 , -0.5220024 , -0.01553358,  0.3919248 ], dtype=float32), 0), (array([-1.4602102 , -0.32666346, -0.00769509,  0.09438507], dtype=float32), 1), (array([-1.4667435 , -0.13143209, -0.00580739, -0.20071568], dtype=float32), 1), (array([-1.469372  , -0.3264705 , -0.0098217 ,  0.09012965], dtype=float32), 0), (array([-1.4759015 , -0.13120915, -0.00801911, -0.20563577], dtype=float32), 1), (array([-1.4785256 , -0.3262155 , -0.01213182,  0.08450677], dtype=float32), 0), (array([-1.48505   , -0.13092178, -0.01044169, -0.21197894], dtype=float32), 1), (array([-1.4876684 , -0.3258929 , -0.01468127,  0.07739199], dtype=float32), 0), (array([-1.4941863 , -0.52080137, -0.01313343,  0.36540702], dtype=float32), 0), (array([-1.5046023 , -0.32549524, -0.00582529,  0.068612  ], dtype=float32), 1), (array([-1.5111122 , -0.13029025, -0.00445305, -0.22590312], dtype=float32), 1), (array([-1.513718  , -0.3253483 , -0.00897111,  0.06537182], dtype=float32), 0), (array([-1.5202249 , -0.52034044, -0.00766367,  0.35521087], dtype=float32), 0), (array([-1.5306318e+00, -3.2511041e-01, -5.5945490e-04,  6.0121257e-02],
      dtype=float32), 1), (array([-1.5371341e+00, -1.2998043e-01,  6.4297026e-04, -2.3273814e-01],
      dtype=float32), 1), (array([-1.5397336 , -0.32511157, -0.00401179,  0.06014754], dtype=float32), 0), (array([-1.5462358 , -0.12993231, -0.00280884, -0.23379843], dtype=float32), 1), (array([-1.5488344 , -0.32501402, -0.00748481,  
0.05799718], dtype=float32), 0), (array([-1.5553348 , -0.5200279 , -0.00632487,  0.34830922], dtype=float32), 0), (array([-1.5657353e+00, -3.2481652e-01,  6.4131798e-04,  5.3638581e-02],
      dtype=float32), 1), (array([-1.5722317 , -0.12970378,  0.00171409, -0.23884194], dtype=float32), 1), (array([-1.5748258 , -0.32485017, -0.00306275,  0.05438117], dtype=float32), 0), (array([-1.5813228 , -0.5199281 , -0.00197513,  
0.34609622], dtype=float32), 0), (array([-1.5917213 , -0.32477808,  0.0049468 ,  0.0527911 ], dtype=float32), 1), (array([-1.5982169 , -0.12972741,  0.00600262, -0.23832698], dtype=float32), 1), (array([-1.6008114e+00, -3.2493460e-01,  
1.2360808e-03,  5.6243293e-02],
      dtype=float32), 0), (array([-1.60731   , -0.12983039,  0.00236095, -0.23604938], dtype=float32), 1), (array([-1.6099067 , -0.324986  , -0.00236004,  0.05737732], dtype=float32), 0), (array([-1.6164064e+00, -5.2007401e-01, -1.2124947e-03,  3.4931469e-01],
      dtype=float32), 0), (array([-1.6268079 , -0.32493487,  0.0057738 ,  0.05624968], dtype=float32), 1), (array([-1.6333066 , -0.12989616,  0.00689879, -0.23460598], dtype=float32), 1), (array([-1.6359046 , -0.325116  ,  0.00220667,  
0.06024503], dtype=float32), 0), (array([-1.6424068 , -0.5202695 ,  0.00341157,  0.35362336], dtype=float32), 0), (array([-1.6528122 , -0.32519624,  0.01048404,  0.06201815], dtype=float32), 1), (array([-1.6593162 , -0.13022617,  0.0117244 , -0.22733864], dtype=float32), 1), (array([-1.6619207 , -0.3255137 ,  0.00717763,  0.06901941], dtype=float32), 0), (array([-1.6684309 , -0.13049538,  0.00855802, -0.22139032], dtype=float32), 1), (array([-1.6710409 , -0.3257386 , 
 0.00413021,  0.07397982], dtype=float32), 0), (array([-1.6775557 , -0.1306761 ,  0.00560981, -0.21739715], dtype=float32), 1), (array([-1.6801691e+00, -3.2587782e-01,  1.2618657e-03,  7.7050053e-02],
      dtype=float32), 0), (array([-1.6866868 , -0.52101785,  0.00280287,  0.37013084], dtype=float32), 0), (array([-1.6971071 , -0.3259358 ,  0.01020548,  0.078333  ], dtype=float32), 1), (array([-1.7036258 , -0.13096163,  0.01177214, -0.21111268], dtype=float32), 1), (array([-1.7062451 , -0.3262499 ,  0.00754989,  0.08526037], dtype=float32), 0), (array([-1.71277   , -0.13123699,  0.0092551 , -0.20503102], dtype=float32), 1), (array([-1.7153947 , -0.32649004,  0.00515448,  0.090557  ], dtype=float32), 0), (array([-1.7219245 , -0.5216855 ,  0.00696562,  0.3848617 ], dtype=float32), 0), (array([-1.7323582 , -0.32666314,  0.01466285,  0.09438311], dtype=float32), 1), (array([-1.7388915 , -0.13175438, 
 0.01655051, -0.19363786], dtype=float32), 1), (array([-1.7415266 , -0.32710913,  0.01267776,  0.10421974], dtype=float32), 0), (array([-1.7480688 , -0.13217112,  0.01476215, -0.18443659], dtype=float32), 1), (array([-1.7507123 , -0.32750115,  0.01107342,  0.11286645], dtype=float32), 0), (array([-1.7572622 , -0.13253962,  0.01333075, -0.17630242], dtype=float32), 1), (array([-1.7599131 , -0.32784978,  0.0098047 ,  0.12055592], dtype=float32), 0), (array([-1.7664701 , -0.13286966,  0.01221582, -0.16901766], dtype=float32), 1), (array([-1.7691275 , -0.3281643 ,  0.00883546,  0.12749383], dtype=float32), 0), (array([-1.7756907 , -0.13317005,  0.01138534, -0.16238856], dtype=float32), 1), (array([-1.7783542 , -0.32845312,  0.00813757,  0.13386427], dtype=float32), 0), (array([-1.7849232 , -0.13344868,  0.01081485, -0.1562403 ], dtype=float32), 1), (array([-1.7875922 , -0.3287238 ,  0.00769005,  0.13983475], dtype=float32), 0), (array([-1.7941667 , -0.13371281,  0.01048674, -0.1504122 ], dtype=float32), 1), (array([-1.7968409 , -0.32898334,  0.0074785 ,  0.14556053], dtype=float32), 0), (array([-1.8034205 , -0.13396929,  0.01038971, -0.14475372], dtype=float32), 1), (array([-1.8060999 , -0.32923847,  0.00749464,  0.15118878], dtype=float32), 0), (array([-1.8126847 , -0.13422464,  0.01051841, -0.13912036], dtype=float32), 1), (array([-1.8153692 , -0.32949564,  0.007736  ,  0.1568623 ], dtype=float32), 0), (array([-1.8219591 , -0.1344853 ,  0.01087325, -0.13337009], dtype=float32), 1), (array([-1.8246489 , -0.3297613 ,  0.00820585,  0.16272327], dtype=float32), 0), (array([-1.831244  , -0.13475779,  0.01146031, -0.12735967], dtype=float32), 1), (array([-1.8339392 , -0.33004203,  0.00891312,  0.1689167 ], dtype=float32), 0), (array([-1.84054   , -0.13504878,  0.01229145, -0.12094113], dtype=float32), 1), (array([-1.843241  , -0.33034465,  0.00987263,  0.17559415], dtype=float32), 0), (array([-1.8498479 , -0.13536537,  0.01338452, -0.113958  ], dtype=float32), 1), (array([-1.8525553 , -0.33067653,  0.01110535,  0.18291742], dtype=float32), 0), (array([-1.8591688 , -0.13571523,  0.0147637 , -0.1062416 ], dtype=float32), 1), (array([-1.861883  , -0.3310456 ,  0.01263887,  0.1910624 ], dtype=float32), 0), (array([-1.8685039 , -0.13610671,  0.01646012, -0.09760683], dtype=float32), 1), (array([-1.8712261 , -0.33146065,  0.01450798,  0.20022345], dtype=float32), 0), (array([-1.8778553 , -0.13654919,  0.01851245, -0.08784781], dtype=float32), 1), (array([-1.8805863 , -0.33193153,  0.0167555 ,  0.21061784], dtype=float32), 0), (array([-1.8872249 , -0.13705312,  0.02096785, -0.07673287], dtype=float32), 1), (array([-1.889966  , -0.33246928,  0.01943319,  0.22249104], dtype=float32), 0), (array([-1.8966154 , -0.1376304 ,  0.02388302, -0.06399909], dtype=float32), 1), (array([-1.8993679 , -0.3330865 ,  0.02260303,  0.23612237], dtype=float32), 0), (array([-1.9060297 , -0.13829464,  0.02732548, -0.04934604], dtype=float32), 1), (array([-1.9087956 , -0.33379754,  0.02633856,  0.25183153], dtype=float32), 0), (array([-1.9154716 , -0.1390614 ,  0.03137519, -0.03242873], dtype=float32), 1), (array([-1.9182528 ,  0.0555969 ,  0.03072662, -0.31504968], dtype=float32), 1), (array([-1.9171408 , -0.13994896,  0.02442562, -0.01283714], dtype=float32), 0), (array([-1.9199399 , -0.33541253,  0.02416888,  0.28745118], dtype=float32), 0), (array([-1.926648  , -0.14064345,  0.02991791,  0.00248783], dtype=float32), 1), (array([-1.929461  ,  0.05403695,  0.02996766, -0.28060752], dtype=float32), 1), (array([-1.9283803 , -0.14149939,  0.02435551,  0.02137444], dtype=float32), 0), (array([-1.9312102 ,  0.05326498,  0.024783  , -0.26352564], dtype=float32), 1), (array([-1.9301449 , -0.1422018 ,  0.01951249,  0.03686994], dtype=float32), 0), (array([-1.9329889 , -0.33759806,  0.02024989,  0.33564484], dtype=float32), 0), (array([-1.9397409 , -0.14277004,  0.02696278,  0.04941581], dtype=float32), 1), (array([-1.9425963 ,  0.05195512,  0.0279511 , -0.23463967], dtype=float32), 
1), (array([-1.9415572 , -0.1435548 ,  0.0232583 ,  0.06672722], dtype=float32), 0), (array([-1.9444283 ,  0.0512261 ,  0.02459285, -0.2185278 ], dtype=float32), 1), (array([-1.9434037 , -0.14423862,  0.02022229,  0.08181018], dtype=float32), 0), (array([-1.9462886 ,  0.0505877 ,  0.0218585 , -0.20442459], dtype=float32), 1), (array([-1.9452767 , -0.14483991,  0.01777001,  0.09507269], dtype=float32), 0), (array([-1.9481736 ,  0.0500229 ,  0.01967146, -0.19195127], dtype=float32), 1)]

train_e_mean, train_e_std, train_e_trajectories = -114, 0, [(array([-0.47979945,  0.00067749], dtype=float32), 2), (array([-0.47844952,  0.00134994], dtype=float32), 2), (array([-0.47643718,  0.00201235], dtype=float32), 2), (array([-0.47377735,  0.00265982], dtype=float32), 2), (array([-0.4704898 ,  0.00328755], dtype=float32), 2), (array([-0.4665989 ,  0.00389091], dtype=float32), 2), (array([-0.4621334,  0.0044655], dtype=float32), 2), (array([-0.4571263 ,  0.00500711], dtype=float32), 2), (array([-0.4516144 ,  0.00551187], dtype=float32), 2), (array([-0.44563824,  0.00597617], dtype=float32), 2), (array([-0.43924147,  0.00639678], dtype=float32), 2), (array([-0.43247062,  0.00677083], dtype=float32), 2), (array([-0.42537478,  0.00709586], dtype=float32), 2), (array([-0.418005  ,  0.00736979], dtype=float32), 2), (array([-0.41041398,  0.00759102], dtype=float32), 2), (array([-0.40265563,  0.00775835], dtype=float32), 2), (array([-0.39478457,  0.00787105], dtype=float32), 2), (array([-0.38685575,  0.00792881], dtype=float32), 2), (array([-0.378924  ,  0.00793176], dtype=float32), 2), (array([-0.37104356,  0.00788045], dtype=float32), 2), (array([-0.36326775,  0.00777581], dtype=float32), 2), (array([-0.3556486 ,  0.00761916], dtype=float32), 2), (array([-0.34823644,  0.00741215], dtype=float32), 2), (array([-0.34107968,  0.00715677], dtype=float32), 2), (array([-0.3342244 ,  0.00685526], dtype=float32), 2), (array([-0.32771426,  0.00651014], dtype=float32), 2), (array([-0.32159016,  0.00612411], dtype=float32), 2), (array([-0.31589004,  0.0057001 ], dtype=float32), 2), (array([-0.3106489 ,  0.00524116], dtype=float32), 2), (array([-0.30589843,  0.00475048], dtype=float32), 2), (array([-0.3016671 ,  0.00423135], dtype=float32), 2), (array([-0.29797995,  0.00368713], dtype=float32), 2), (array([-0.29485866,  0.00312127], dtype=float32), 2), (array([-0.29232144,  0.00253723], dtype=float32), 2), (array([-0.29038295,  0.00193851], dtype=float32), 2), (array([-0.2890543 ,  0.00132864], dtype=float32), 2), (array([-2.8934315e-01, -2.8884504e-04], dtype=float32), 1), (array([-0.29224783, -0.00290467], dtype=float32), 0), (array([-0.29775164, -0.00550382], dtype=float32), 0), (array([-0.30582267, -0.00807102], dtype=float32), 0), (array([-0.31641325, -0.0105906 ], dtype=float32), 0), (array([-0.3294596 , -0.01304635], dtype=float32), 0), (array([-0.3448811 , -0.01542146], dtype=float32), 0), (array([-0.3625796 , -0.01769855], dtype=float32), 0), (array([-0.38243937, -0.01985977], dtype=float32), 0), (array([-0.4043265, -0.0218871], dtype=float32), 0), (array([-0.42808917, -0.02376268], dtype=float32), 0), (array([-0.45355842, -0.02546924], dtype=float32), 0), (array([-0.4805491 , -0.02699068], dtype=float32), 0), (array([-0.5088617 , -0.02831266], dtype=float32), 0), (array([-0.5382849 , -0.02942315], dtype=float32), 0), (array([-0.5685979 , -0.03031304], dtype=float32), 0), (array([-0.5995745 , -0.03097657], dtype=float32), 0), (array([-0.63098615, -0.03141167], dtype=float32), 0), (array([-0.6626063 , -0.03162013], dtype=float32), 0), (array([-0.6942138 , -0.03160753], dtype=float32), 0), (array([-0.7255969 , -0.03138306], dtype=float32), 0), (array([-0.75655603, -0.03095911], dtype=float32), 0), (array([-0.7869067 , -0.03035073], dtype=float32), 0), (array([-0.8164817 , -0.02957498], dtype=float32), 0), (array([-0.845132  , -0.02865028], dtype=float32), 0), (array([-0.87272775, -0.02759573], dtype=float32), 0), (array([-0.8991582 , -0.02643043], dtype=float32), 0), (array([-0.9243311 , -0.02517296], dtype=float32), 0), (array([-0.948172  , -0.02384087], dtype=float32), 0), (array([-0.9696224 , -0.02145038], dtype=float32), 1), (array([-0.9886401 , -0.01901778], dtype=float32), 1), (array([-1.0041964 , -0.01555626], dtype=float32), 2), (array([-1.0162735 , -0.01207703], dtype=float32), 2), (array([-1.0248612 , -0.00858778], dtype=float32), 2), (array([-1.0299547 , -0.00509339], dtype=float32), 2), (array([-1.0315514 , -0.00159674], dtype=float32), 2), (array([-1.0296508 ,  0.00190051], dtype=float32), 2), (array([-1.0242538 ,  0.00539705], dtype=float32), 2), (array([-1.0153626 ,  0.00889113], dtype=float32), 2), (array([-1.002983  ,  0.01237973], dtype=float32), 2), (array([-0.98712516,  0.01585777], dtype=float32), 2), (array([-0.9678079 ,  0.01931729], dtype=float32), 2), (array([-0.94506115,  0.02274672], dtype=float32), 2), (array([-0.9189309 ,  0.02613027], dtype=float32), 2), (array([-0.88948345,  0.02944746], dtype=float32), 2), (array([-0.8568106 ,  0.03267281], dtype=float32), 2), (array([-0.8210346 ,  0.03577599], dtype=float32), 2), (array([-0.78231233,  0.0387223 ], dtype=float32), 2), (array([-0.7408387 ,  0.04147362], dtype=float32), 2), (array([-0.6968487 ,  0.04399001], dtype=float32), 2), (array([-0.650617  ,  0.04623167], dtype=float32), 2), (array([-0.6024556 ,  0.04816142], dtype=float32), 2), (array([-0.55270827,  0.04974734], dtype=float32), 2), (array([-0.5017429 ,  0.05096539], dtype=float32), 2), (array([-0.4499413 ,  0.05180158], dtype=float32), 2), (array([-0.39768764,  0.05225364], dtype=float32), 2), (array([-0.34535605,  0.0523316 ], dtype=float32), 2), (array([-0.29329848,  0.05205758], dtype=float32), 2), (array([-0.24183397,  0.05146451], dtype=float32), 2), (array([-0.19123988,  0.05059409], dtype=float32), 2), (array([-0.14174551,  0.04949437], dtype=float32), 2), (array([-0.09352849,  0.04821702], dtype=float32), 2), (array([-0.04671371,  0.04681478], dtype=float32), 2), (array([-0.00137442,  0.04533929], dtype=float32), 2), (array([0.04246489, 0.04383931], dtype=float32), 2), (array([0.08482447, 0.04235957], dtype=float32), 2), (array([0.12576455, 0.04094008], 
                                                                dtype=float32), 2), (array([0.16538046, 0.03961592], dtype=float32), 2), (array([0.20379782, 0.03841735], dtype=float32), 2), (array([0.24116805, 0.03737023], dtype=float32), 2), (array([0.27766457, 0.03649651], dtype=float32), 2), (array([0.3134794 , 0.03581485], dtype=float32), 2), (array([0.34882066, 0.03534126], dtype=float32), 2), (array([0.38391033, 0.03508967], dtype=float32), 2), (array([0.41898274, 0.0350724 ], dtype=float32), 2), (array([0.45428333, 0.0353006 ], dtype=float32), 2), (array([0.4900678 , 0.03578447], dtype=float32), 2), (array([0.52660125, 0.03653342], dtype=float32), 2)]

train_e_states = np.array([s for s,_ in train_e_trajectories])
train_e_actions = np.array([a for _,a in train_e_trajectories])


# print('train_e_trajectories:', train_e_trajectories)
print('train_e_mean:', train_e_mean, 'train_e_std:', train_e_std)

for depth in [1]:

    # b_means, b_stds, b_scores = [], [], []
    for i in range(5000):
        behaviour_cloning = DecisionTree(env, max_depth=depth)
        behaviour_cloning.fit(train_e_states, train_e_actions)

        # print('Behaviour Cloning on', len(expert_trajectories), 'state-action pairs')
        b_mean, b_std, b_trajectories = behaviour_cloning.do_rollout(n=total_test_rollouts, print=False)
        
        # find_mean, f_std, f_f = -102.22, 31.931, 0.843
        find_mean, f_std, f_f = 9.31,	0.666,	0.86
        # find_mean, f_std, f_f = -121.9,	15.323,	0.938

        # if abs(find_mean - b_mean) < 1 and abs(f_std - b_std) < 3:
        if abs(find_mean - b_mean) < 0.5 and abs(f_std - b_std) < 0.2:
        # if abs(find_mean - b_mean) < 2 and abs(f_std - b_std) < 2:

            b_score = behaviour_cloning.score(test_e_states, test_e_actions)

            # if abs(b_score - f_f) < 0.005:
            if abs(b_score - f_f) < 0.02:
            # if abs(b_score - f_f) < 0.01:

                behaviour_cloning.save(f'BC_{str(round(b_mean, 3))}_{str(round(b_std, 3))}_{str(round(b_score, 3))}')

                target_name = f'{env.spec.id}: {str(round(b_mean, 2))} & {str(round(b_std, 2))}'
                file_name_extra = f'{env.spec.id}_{depth}_{i}_{1}_{str(round(b_mean, 2))}_{str(round(b_std, 2))}_{str(round(b_score, 2))}'
                viz = dtreeviz(behaviour_cloning.decision_tree, test_e_states, test_e_actions, feature_names=feature_names, class_names=class_names, target_name=target_name)
                viz.save(f'./trees/find_bc/svg_BC_DecistionTree_{file_name_extra}.svg')
                print('FOUND FOLLOWING DT:', b_score)

        print(f'Depth {depth} BC:', b_mean, b_std)